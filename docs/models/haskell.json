{
    "name": "Haskell",
    "headline": "FSML implementation using Template Haskell",
    "sections": [
	{
	    "features": ["AST^-"],
	    "headline": "AST implementation using ADTs",
	    "projection": {
		"type": "implementation",
		"link": "https://raw.githubusercontent.com/softlang/metalib/master/haskell/fsml/src/Language/FSML/Ast.hs",
		"languages": ["Haskell"],
		"technologies": [],
		"concepts": ["Algebraic data type"],
		"selection": {
		    "type": "excerpt",
		    "folded": {
			"from": 9,
			"to": 11
		    },
		    "unfolded": {
			"from": 7,
			"to": 15
		    }
		}
	    }
	},
	{
	    "features": ["Scannerfull parsing"],
	    "headline": "Lexer definition build with Parsec",
	    "projection": {
		"type": "implementation",
		"link": "https://raw.githubusercontent.com/softlang/metalib/master/haskell/fsml/src/Language/FSML/Lexer.hs",
		"languages": ["Haskell"],
		"technologies": ["Parsec"],
		"concepts": ["Lexer"],
		"selection": {
		    "type": "excerpt",
		    "folded": {
			"from": 13,
			"to": 25
		    },
		    "unfolded": {
			"from": 13,
			"to": 43
		    }
		}
	    }
	},
	{
	    "features": ["Scannerfull parsing", "Text-to-AST"],
	    "headline": "Parser combinator on top of Parsec",
	    "projection": {
		"type": "implementation",
		"link": "https://raw.githubusercontent.com/softlang/metalib/master/haskell/fsml/src/Language/FSML/Parser.hs",
		"languages": ["Haskell"],
		"technologies": ["Parsec"],
		"concepts": ["Parser combinator"],
		"selection": {
		    "type": "excerpt",
		    "folded": {
			"from": 31,
			"to": 36
		    },
		    "unfolded": {
			"from": 28,
			"to": 50
		    }
		}
	    }
	},
	{
	    "features": ["Creole^+-"],
	    "headline": "TODO",
	    "projection": {
		"type": "implementation",
		"link": "https://raw.githubusercontent.com/softlang/metalib/master/haskell/fsml/app/Main.hs",
		"languages": ["Haskell"],
		"technologies": ["Template Haskell"],
		"concepts": ["Quasi-quotation"],
		"selection": {
		    "type": "excerpt",
		    "folded": {
			"from": 7,
			"to": 11
		    },
		    "unfolded": {
			"from": 7,
			"to": 22
		    }
		}
	    }
	},
	{
	    "features": ["Analyse^M"],
	    "headline": "Contraint checking in plain Haskell",
	    "projection": {
		"type": "implementation",
		"link": "https://raw.githubusercontent.com/softlang/metalib/master/haskell/fsml/src/Language/FSML/Checker.hs",
		"languages": ["Haskell"],
		"technologies": [],
		"concepts": [],
		"selection": {
		    "type": "excerpt",
		    "folded": {
			"from": 22,
			"to": 27
		    },
		    "unfolded": {
			"from": 8,
			"to": 46
		    }
		}
	    }
	},
	{
	    "features": ["Interpret^M"],
	    "headline": "TODO",
	    "projection": {
		"type": "implementation",
		"link": "https://raw.githubusercontent.com/softlang/metalib/master/haskell/fsml/app/Main.hs",
		"languages": ["Haskell"],
		"technologies": [],
		"concepts": ["Currying", "Fold"],
		"selection": {
		    "type": "excerpt",
		    "folded": {
			"from": 25,
			"to": 25
		    },
		    "unfolded": {
			"from": 24,
			"to": 25
		    }
		}
	    }
	},
	{
	    "features": ["Translate^M"],
	    "headline": "Translation to AST",
	    "projection": {
		"type": "implementation",
		"link": "https://raw.githubusercontent.com/softlang/metalib/master/haskell/fsml/src/Language/FSML/QuasiQuoter.hs",
		"languages": ["Haskell"],
		"technologies": ["Template Haskell"],
		"concepts": ["Quasi-quotation"],
		"selection": {
		    "type": "excerpt",
		    "folded": {
			"from": 42,
			"to": 50
		    },
		    "unfolded": {
			"from": 22,
			"to": 81
		    }
		}
	    }
	}
    ]
}
