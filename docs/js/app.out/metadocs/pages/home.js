// Compiled by ClojureScript 1.9.521 {:static-fns true, :optimize-constants true}
goog.provide('metadocs.pages.home');
goog.require('cljs.core');
goog.require('cljs.core.constants');
goog.require('metadocs.components.summary');
goog.require('metadocs.components.tagcloud');
metadocs.pages.home.page = (function metadocs$pages$home$page(){
var contributions = (function (){var x__10237__auto__ = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"Scala embedded",cljs.core.cst$kw$baseuri,"https://github.com/softlang/metalib/blob/master/scala/fsml/",cljs.core.cst$kw$headline,"Scala-based embedded language implementation with macros",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$headline,"Case classes for object representation",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case Class"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"core/src/main/scala/org/softlang/fsml/AST.scala"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Text-to-AST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$headline,"Textual embedded turnstile parsed as valid scala AST",cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Static annotation","Language Embedding"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"app/src/main/scala/org/softlang/fsml/Main.scala",cljs.core.cst$kw$from,5,cljs.core.cst$kw$to,23], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Text-to-AST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$headline,"Unlifting FSM expressions",cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Static annotation","Quasi Quotation","Implicit conversion"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"core/src/main/scala/org/softlang/fsml/Quotations.scala",cljs.core.cst$kw$from,50,cljs.core.cst$kw$to,66], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$headline,"Constraints validated as part of the macro expansion",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"core/src/main/scala/org/softlang/fsml/Checker.scala",cljs.core.cst$kw$from,17,cljs.core.cst$kw$to,24], null)], null)], null),new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Piggyback"], null),cljs.core.cst$kw$headline,"Distinct state ids are guarantied by lifting state to objects in the same scope",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$type,"component",cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["scalameta"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lifting","Quasi-quotation","Implicit conversion"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"core/src/main/scala/org/softlang/fsml/Quotations.scala",cljs.core.cst$kw$from,8,cljs.core.cst$kw$to,17], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Run-time system?"], null),cljs.core.cst$kw$headline,"Interpretation represented as a object property access chain",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["application"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"app/src/main/scala/org/softlang/fsml/Main.scala",cljs.core.cst$kw$from,25,cljs.core.cst$kw$to,25], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Run-time system?","Staging"], null),cljs.core.cst$kw$headline,"Annotation inlines textual embedded fsm into an scala object with initial state",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["scalameta"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Inline Macro"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"core/src/main/scala/org/softlang/fsml/Fsm.scala",cljs.core.cst$kw$from,8,cljs.core.cst$kw$to,25], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Staging"], null),cljs.core.cst$kw$headline,"The transitions are translated to scala AST function definitions",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["scalameta"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lifting","Quasi-quotation","Implicit conversion","Interpolation"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"core/src/main/scala/org/softlang/fsml/Quotations.scala",cljs.core.cst$kw$from,19,cljs.core.cst$kw$to,48], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$1 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"EMFSirius",cljs.core.cst$kw$headline,"EMF with Sirius",cljs.core.cst$kw$baseuri,"https://github.com/softlang/metalib/blob/master/sirius/fsml/",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graph editing"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$languages,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data","capture"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Turnstile.PNG"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ASG"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Metamodel"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ecore"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation","capture"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Metamodel.PNG"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org.softlang.metalib.sirius.fsml.model/model/Fsml.ecore"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Model projection"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sirius viewpoint specification"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation","capture"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Projection.PNG"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org.softlang.metalib.sirius.fsml.viewpoint/description/Fsml.odesign"], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$2 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"javaExternal",cljs.core.cst$kw$baseuri,"https://github.com/softlang/yas/blob/master/languages/FSML/",cljs.core.cst$kw$headline,"External DSL style with ANTLR and Java",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Concrete syntax"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["FSML"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["External DSL"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"sample.fsml"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scanning","Text-to-CST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Grammar"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/Fsml.g4"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Functional constructor"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/org/softlang/fsml/Fsm.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/org/softlang/fsml/State.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/org/softlang/fsml/Transition.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Abstraction"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Listener","Tree Walker"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/org/softlang/fsml/FsmlToObjects.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Text-to-CST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Parser generation","Code generation"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"Java/org/softlang/fsml/FsmlParser.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Text-to-CST"], null),cljs.core.cst$kw$headline,"Driver code for syntax checking",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Acceptor"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/org/softlang/fsml/FsmlSyntaxChecker.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Text-to-AST"], null),cljs.core.cst$kw$headline,"Driver code for parsing",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Boilerplate code"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4","JUnit"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/org/softlang/fsml/tests/FsmlToObjectsTest.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$headline,"Compilation to C",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template Processing"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Stringtemplate"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/org/softlang/fsml/FsmlCGenerator.java"], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$3 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"pythonInternal",cljs.core.cst$kw$baseuri,"https://github.com/softlang/yas/blob/master/languages/FSML/Python/",cljs.core.cst$kw$headline,"Internal DSL style with Python",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fluent API"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"FsmlSample.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API","AST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fluent API"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"FsmlModel.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template Processing"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["jinja2"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"FsmlCGenerator.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["jinja2"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template processing"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["jinja2"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"templates/Fsm.jinja2"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Exception"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"FsmlConstraints.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Interpretation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"FsmlInterpreter.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graph rendering"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["DOT"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graphviz"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"dot/sample.dot"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graph rendering"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JSON","DOT","Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Internal DSL"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graphviz"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"FsmlVisualizer.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Interpretation"], null),cljs.core.cst$kw$headline,"Input for interpretation",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JSON"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"sample.input"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Interpretation"], null),cljs.core.cst$kw$headline,"Output for interpretation",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JSON"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"sample.output"], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$4 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"javaFluentInternal",cljs.core.cst$kw$baseuri,"https://github.com/softlang/yas/blob/master/languages/FSML/Java/",cljs.core.cst$kw$headline,"Internal DSL style with Java with a fluent API",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fluent API"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/fluent/Sample.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fluent API"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/fluent/Fsm.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/fluent/ActionStatePair.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Semantic domain"], null),cljs.core.cst$kw$headline,"Implementation of fluent API",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fluent API"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/fluent/FsmImpl.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Interpretation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/fluent/FsmlInterpreter.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Interpretation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JUnit"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/tests/FluentTest.java"], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$5 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"EMFXtext",cljs.core.cst$kw$headline,"XText with derived EMF model",cljs.core.cst$kw$baseuri,"https://github.com/softlang/metalib/blob/master/xtext/fsml/",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ASG","Text-to-ASG"], null),cljs.core.cst$kw$headline,"State-machine grammar",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Xtext"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Xtext"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src/org/softlang/metalib/xtext/fsml/Fsml.xtext"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Textual syntax"], null),cljs.core.cst$kw$headline,"A Turnstile FSM",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["FSML"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml.turnstile/src/org/softlang/metalib/xtext/fsml/turnstile/Turnstile.fsml"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ASG"], null),cljs.core.cst$kw$headline,"EMF model interfaces",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Generated code"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src-gen/org/softlang/metalib/xtext/fsml/fsml/FSM.java",cljs.core.cst$kw$from,24,cljs.core.cst$kw$to,44], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src/org/softlang/metalib/xtext/fsml/fsml/FSMState.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src/org/softlang/metalib/xtext/fsml/fsml/FSMTransition.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ASG"], null),cljs.core.cst$kw$headline,"EMF model classes",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Generated code"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src-gen/org/softlang/metalib/xtext/fsml/fsml/impl/FSMImpl.java",cljs.core.cst$kw$from,35,cljs.core.cst$kw$to,47], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src-gen/org/softlang/metalib/xtext/fsml/fsml/impl/FSMStateImpl.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src-gen/org/softlang/metalib/xtext/fsml/fsml/impl/FSMTransitionImpl.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Text-to-ASG","Scanning"], null),cljs.core.cst$kw$headline,"Generated Parser",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR3"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Parser","Token"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src-gen/org/softlang/metalib/xtext/fsml/parser/antlr/FsmlParser.java",cljs.core.cst$kw$from,12,cljs.core.cst$kw$to,40], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$headline,"Xtext Constraint",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Xtend"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src/org/softlang/metalib/xtext/fsml/validation/FsmlValidator.xtend",cljs.core.cst$kw$from,35,cljs.core.cst$kw$to,54], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Piggyback","Resolution"], null),cljs.core.cst$kw$headline,"Xtext model reference resolution by name",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Xtext"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Reference relationship","Name binding"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src/org/softlang/metalib/xtext/fsml/Fsml.xtext",cljs.core.cst$kw$from,20,cljs.core.cst$kw$to,21], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$headline,"",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Xtend"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template processing"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src/org/softlang/metalib/xtext/fsml/generator/FsmlGenerator.xtend",cljs.core.cst$kw$from,80,cljs.core.cst$kw$to,185], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graph rendering"], null),cljs.core.cst$kw$headline,"DGL generation",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Xtend"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template processing"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src/org/softlang/metalib/xtext/fsml/generator/FsmlGenerator.xtend",cljs.core.cst$kw$from,188,cljs.core.cst$kw$to,199], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$6 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"pythonExternal",cljs.core.cst$kw$headline,"External DSL style with ANTLR and Python",cljs.core.cst$kw$baseuri,"https://github.com/softlang/yas/blob/master/languages/FSML/",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Concrete syntax"], null),cljs.core.cst$kw$headline,"FSML example",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["FSML"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"sample.fsml"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scanning"], null),cljs.core.cst$kw$headline,"Generated Lexer",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Parser generation","Generated code"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"Python/FsmlLexer.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Text-to-AST"], null),cljs.core.cst$kw$headline,"Generated Parser",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Parser generation","Generated code"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"Python/FsmlParser.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API","AST"], null),cljs.core.cst$kw$headline,"AST implementation based on dictionaries",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["dictionary"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Python/FsmlModel.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scanning","Text-to-AST"], null),cljs.core.cst$kw$headline,"ANTLR grammar for FSML including semantic actions",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Grammar","Semantic action"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Python/Fsml.g4"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Serialization"], null),cljs.core.cst$kw$headline,"Serialized Turnstile",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JSON"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Python/sample.json"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Serialization","Parsing"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Python/FsmlToJSON.py"], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$7 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"MPS",cljs.core.cst$kw$baseuri,"https://github.com/softlang/metalib/blob/master/mps/",cljs.core.cst$kw$headline,"MPS implementation based on projectional editing",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$headline,"Projectional Editor on AST",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["capture"], null),cljs.core.cst$kw$languages,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["MPS"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"editor_state.png"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$headline,"Projectional Editor on AST",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["capture"], null),cljs.core.cst$kw$languages,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["MPS"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"structure_event.png"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$headline,"Check determinism",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["capture"], null),cljs.core.cst$kw$languages,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["MPS"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"typesystem_check_input.png"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$headline,"Compilation",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["capture"], null),cljs.core.cst$kw$languages,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["MPS"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"compilation_state.png"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Projectional Syntax"], null),cljs.core.cst$kw$headline,"Sample Turnstile",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["capture","data"], null),cljs.core.cst$kw$languages,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["MPS"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"sample.png"], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$8 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"HaskellQuasiQuotation",cljs.core.cst$kw$baseuri,"https://github.com/softlang/metalib/blob/master/haskell/fsml/",cljs.core.cst$kw$headline,"Use of quasi-quotation and Template Haskell",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$headline,"AST implementation",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Algebraic data type","Record type"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"src/Language/FSML/Ast.hs",cljs.core.cst$kw$from,7,cljs.core.cst$kw$to,15], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scanning"], null),cljs.core.cst$kw$headline,"Lexer definition",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Parsec"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lexer","Parser combinator"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"src/Language/FSML/Lexer.hs",cljs.core.cst$kw$from,13,cljs.core.cst$kw$to,43], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scanning","Text-to-AST"], null),cljs.core.cst$kw$headline,"Parser combinator",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Parsec"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Parser combinator"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"src/Language/FSML/Parser.hs",cljs.core.cst$kw$from,28,cljs.core.cst$kw$to,50], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$headline,"Embedded turnstile object in Haskell declaration context",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template Haskell"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Quasi-quotation"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"app/Main.hs",cljs.core.cst$kw$from,7,cljs.core.cst$kw$to,22], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$headline,"Constraint checking",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"src/Language/FSML/Checker.hs",cljs.core.cst$kw$from,8,cljs.core.cst$kw$to,46], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Piggyback"], null),cljs.core.cst$kw$headline,"By generating alternatives for the state data type distinct state ids are guaranteed",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"src/Language/FSML/QuasiQuoter.hs",cljs.core.cst$kw$from,42,cljs.core.cst$kw$to,50], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Dynamic semantics","Run-time system"], null),cljs.core.cst$kw$headline,"Transitioning between states by folding over the generated event functions",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"app/Main.hs",cljs.core.cst$kw$from,24,cljs.core.cst$kw$to,28], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Staging"], null),cljs.core.cst$kw$headline,"Transitions are translated to Haskell AST",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template Haskell"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Quasi-quotation"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"src/Language/FSML/QuasiQuoter.hs",cljs.core.cst$kw$from,52,cljs.core.cst$kw$to,75], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$9 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"EMFXMI",cljs.core.cst$kw$headline,"EMF with XMI persistence",cljs.core.cst$kw$baseuri,"https://github.com/softlang/metalib/blob/master/emf/fsml/",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST","ASG","Resolution"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Metamodel","Structured editor","Reference","Package"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ecore"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation","capture"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"metamodel.PNG"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/model/Fsml.ecore"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API","ASG"], null),cljs.core.cst$kw$headline,"EMF model interface for the FSM object",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["OO interface","Generated code"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/FSM.java",cljs.core.cst$kw$from,25,cljs.core.cst$kw$to,52], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/FSMState.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/FSMTransition.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ASG"], null),cljs.core.cst$kw$headline,"EMF model class for the FSM object",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["OO class","Generated code"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/impl/FSMImpl.java",cljs.core.cst$kw$from,41,cljs.core.cst$kw$to,51], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/impl/FSMStateImpl.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/impl/FSMTransitionImpl.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST","ASG"], null),cljs.core.cst$kw$headline,"EMF Packages",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Package","Factory"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/FsmlFactory.java",cljs.core.cst$kw$from,49,cljs.core.cst$kw$to,58], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/FsmlPackage.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Model projection"], null),cljs.core.cst$kw$headline,"EMF Item provider",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Adapter","Command"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml.edit/src/org/softlang/metalib/emf/fsml/fsml/provider/FSMItemProvider.java",cljs.core.cst$kw$from,76,cljs.core.cst$kw$to,83], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml.edit/src/org/softlang/metalib/emf/fsml/fsml/provider/FSMStateItemProvider.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml.edit/src/org/softlang/metalib/emf/fsml/fsml/provider/FSMTransitionItemProvider.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graph editing","Model projection"], null),cljs.core.cst$kw$headline,"Viewing and editing the turnstile object in the generated eclipse editor",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data","capture"], null),cljs.core.cst$kw$languages,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JFace","SWT","Eclipse"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["IDE","Structured editor","Generated code"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"emfturnstile.PNG"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graph editing","Model projection"], null),cljs.core.cst$kw$headline,"The generated eclipse editor for EMF models",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JFace","SWT","Eclipse"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["IDE","Structured Editor","Generated code"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml.editor/src/org/softlang/metalib/emf/fsml/fsml/presentation/FsmlEditor.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Serialization","Resolution","AST"], null),cljs.core.cst$kw$headline,"The turnstile object in EMF's textual exchange format",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["XMI"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["SAX"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Persistence","URI"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml.turnstile/Turnstile.fsml"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$headline,"EMF delegates model validation to methods with a certain signature",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/impl/FSMStateImpl.java",cljs.core.cst$kw$from,188,cljs.core.cst$kw$to,217], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Piggyback"], null),cljs.core.cst$kw$headline,"Unique state names are validated by setting the EMF's unique id feature",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["XMI"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Metamodel"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/model/Fsml.ecore",cljs.core.cst$kw$from,37,cljs.core.cst$kw$to,38], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$10 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"javaInfluentInternal",cljs.core.cst$kw$baseuri,"https://github.com/softlang/yas/blob/master/languages/FSML/Java/",cljs.core.cst$kw$headline,"Internal DSL style with Java and an influent API",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API","AST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Batch"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/ImperativeSample.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Functional constructor"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/FunctionalSample.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["OO Class","Functional constructor"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/Fsm.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/State.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/Transition.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Interpretation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/FsmlInterpreter.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Interpretation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JUnit"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/tests/InfluentTest.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$headline," Translate^O  Feature",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Generated code"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/tests/Turnstile.c"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["StringTemplate"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template processing"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["StringTemplate"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"templates/Fsm.stg"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"https://github.com/softlang/yas/blob/master/languages/FSML/Java/org/softlang/fsml/FsmlCGenerator.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["StringTemplate","JUnit"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/tests/CGeneratorTest.java"], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$11 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"Spoofax",cljs.core.cst$kw$baseuri,"https://github.com/softlang/metalib/blob/master/spoofax/fsml/",cljs.core.cst$kw$headline,"Spoofax AST",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$headline,"FSML Grammar in Spoofax",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["SDF3"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Grammar"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"syntax/fsml.sdf3"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Textual syntax"], null),cljs.core.cst$kw$headline,"Turnstile sample in CS",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["FSML"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"test/Turnstile.fsm"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$headline,"Name binding",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["NABL"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Name binding"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"trans/names.nab"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$headline,"Check Initial",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Stratego"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"trans/check.str",cljs.core.cst$kw$from,61,cljs.core.cst$kw$to,62], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$headline,"Compilation to Java",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Stratego"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Name binding"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"trans/generate.str"], null)], null)], null)], null)], null);
return cljs.core._conj(cljs.core.List.EMPTY,x__10237__auto____$11);
})(),x__10237__auto____$10);
})(),x__10237__auto____$9);
})(),x__10237__auto____$8);
})(),x__10237__auto____$7);
})(),x__10237__auto____$6);
})(),x__10237__auto____$5);
})(),x__10237__auto____$4);
})(),x__10237__auto____$3);
})(),x__10237__auto____$2);
})(),x__10237__auto____$1);
})(),x__10237__auto__);
})();
var sections = cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.cst$kw$sections,cljs.core.array_seq([(function (){var x__10237__auto__ = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"Scala embedded",cljs.core.cst$kw$baseuri,"https://github.com/softlang/metalib/blob/master/scala/fsml/",cljs.core.cst$kw$headline,"Scala-based embedded language implementation with macros",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$headline,"Case classes for object representation",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case Class"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"core/src/main/scala/org/softlang/fsml/AST.scala"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Text-to-AST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$headline,"Textual embedded turnstile parsed as valid scala AST",cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Static annotation","Language Embedding"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"app/src/main/scala/org/softlang/fsml/Main.scala",cljs.core.cst$kw$from,5,cljs.core.cst$kw$to,23], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Text-to-AST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$headline,"Unlifting FSM expressions",cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Static annotation","Quasi Quotation","Implicit conversion"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"core/src/main/scala/org/softlang/fsml/Quotations.scala",cljs.core.cst$kw$from,50,cljs.core.cst$kw$to,66], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$headline,"Constraints validated as part of the macro expansion",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"core/src/main/scala/org/softlang/fsml/Checker.scala",cljs.core.cst$kw$from,17,cljs.core.cst$kw$to,24], null)], null)], null),new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Piggyback"], null),cljs.core.cst$kw$headline,"Distinct state ids are guarantied by lifting state to objects in the same scope",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$type,"component",cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["scalameta"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lifting","Quasi-quotation","Implicit conversion"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"core/src/main/scala/org/softlang/fsml/Quotations.scala",cljs.core.cst$kw$from,8,cljs.core.cst$kw$to,17], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Run-time system?"], null),cljs.core.cst$kw$headline,"Interpretation represented as a object property access chain",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["application"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"app/src/main/scala/org/softlang/fsml/Main.scala",cljs.core.cst$kw$from,25,cljs.core.cst$kw$to,25], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Run-time system?","Staging"], null),cljs.core.cst$kw$headline,"Annotation inlines textual embedded fsm into an scala object with initial state",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["scalameta"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Inline Macro"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"core/src/main/scala/org/softlang/fsml/Fsm.scala",cljs.core.cst$kw$from,8,cljs.core.cst$kw$to,25], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Staging"], null),cljs.core.cst$kw$headline,"The transitions are translated to scala AST function definitions",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scala"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["scalameta"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lifting","Quasi-quotation","Implicit conversion","Interpolation"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"core/src/main/scala/org/softlang/fsml/Quotations.scala",cljs.core.cst$kw$from,19,cljs.core.cst$kw$to,48], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$1 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"EMFSirius",cljs.core.cst$kw$headline,"EMF with Sirius",cljs.core.cst$kw$baseuri,"https://github.com/softlang/metalib/blob/master/sirius/fsml/",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graph editing"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$languages,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data","capture"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Turnstile.PNG"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ASG"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Metamodel"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ecore"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation","capture"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Metamodel.PNG"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org.softlang.metalib.sirius.fsml.model/model/Fsml.ecore"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Model projection"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sirius viewpoint specification"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation","capture"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Projection.PNG"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org.softlang.metalib.sirius.fsml.viewpoint/description/Fsml.odesign"], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$2 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"javaExternal",cljs.core.cst$kw$baseuri,"https://github.com/softlang/yas/blob/master/languages/FSML/",cljs.core.cst$kw$headline,"External DSL style with ANTLR and Java",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Concrete syntax"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["FSML"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["External DSL"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"sample.fsml"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scanning","Text-to-CST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Grammar"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/Fsml.g4"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Functional constructor"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/org/softlang/fsml/Fsm.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/org/softlang/fsml/State.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/org/softlang/fsml/Transition.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Abstraction"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Listener","Tree Walker"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/org/softlang/fsml/FsmlToObjects.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Text-to-CST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Parser generation","Code generation"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"Java/org/softlang/fsml/FsmlParser.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Text-to-CST"], null),cljs.core.cst$kw$headline,"Driver code for syntax checking",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Acceptor"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/org/softlang/fsml/FsmlSyntaxChecker.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Text-to-AST"], null),cljs.core.cst$kw$headline,"Driver code for parsing",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Boilerplate code"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4","JUnit"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/org/softlang/fsml/tests/FsmlToObjectsTest.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$headline,"Compilation to C",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template Processing"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Stringtemplate"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Java/org/softlang/fsml/FsmlCGenerator.java"], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$3 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"pythonInternal",cljs.core.cst$kw$baseuri,"https://github.com/softlang/yas/blob/master/languages/FSML/Python/",cljs.core.cst$kw$headline,"Internal DSL style with Python",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fluent API"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"FsmlSample.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API","AST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fluent API"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"FsmlModel.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template Processing"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["jinja2"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"FsmlCGenerator.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["jinja2"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template processing"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["jinja2"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"templates/Fsm.jinja2"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Exception"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"FsmlConstraints.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Interpretation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"FsmlInterpreter.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graph rendering"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["DOT"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graphviz"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"dot/sample.dot"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graph rendering"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JSON","DOT","Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Internal DSL"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graphviz"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"FsmlVisualizer.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Interpretation"], null),cljs.core.cst$kw$headline,"Input for interpretation",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JSON"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"sample.input"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Interpretation"], null),cljs.core.cst$kw$headline,"Output for interpretation",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JSON"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"sample.output"], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$4 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"javaFluentInternal",cljs.core.cst$kw$baseuri,"https://github.com/softlang/yas/blob/master/languages/FSML/Java/",cljs.core.cst$kw$headline,"Internal DSL style with Java with a fluent API",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fluent API"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/fluent/Sample.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fluent API"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/fluent/Fsm.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/fluent/ActionStatePair.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Semantic domain"], null),cljs.core.cst$kw$headline,"Implementation of fluent API",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fluent API"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/fluent/FsmImpl.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Interpretation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/fluent/FsmlInterpreter.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Interpretation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JUnit"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/tests/FluentTest.java"], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$5 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"EMFXtext",cljs.core.cst$kw$headline,"XText with derived EMF model",cljs.core.cst$kw$baseuri,"https://github.com/softlang/metalib/blob/master/xtext/fsml/",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ASG","Text-to-ASG"], null),cljs.core.cst$kw$headline,"State-machine grammar",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Xtext"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Xtext"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src/org/softlang/metalib/xtext/fsml/Fsml.xtext"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Textual syntax"], null),cljs.core.cst$kw$headline,"A Turnstile FSM",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["FSML"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml.turnstile/src/org/softlang/metalib/xtext/fsml/turnstile/Turnstile.fsml"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ASG"], null),cljs.core.cst$kw$headline,"EMF model interfaces",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Generated code"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src-gen/org/softlang/metalib/xtext/fsml/fsml/FSM.java",cljs.core.cst$kw$from,24,cljs.core.cst$kw$to,44], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src/org/softlang/metalib/xtext/fsml/fsml/FSMState.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src/org/softlang/metalib/xtext/fsml/fsml/FSMTransition.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ASG"], null),cljs.core.cst$kw$headline,"EMF model classes",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Generated code"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src-gen/org/softlang/metalib/xtext/fsml/fsml/impl/FSMImpl.java",cljs.core.cst$kw$from,35,cljs.core.cst$kw$to,47], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src-gen/org/softlang/metalib/xtext/fsml/fsml/impl/FSMStateImpl.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src-gen/org/softlang/metalib/xtext/fsml/fsml/impl/FSMTransitionImpl.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Text-to-ASG","Scanning"], null),cljs.core.cst$kw$headline,"Generated Parser",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR3"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Parser","Token"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src-gen/org/softlang/metalib/xtext/fsml/parser/antlr/FsmlParser.java",cljs.core.cst$kw$from,12,cljs.core.cst$kw$to,40], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$headline,"Xtext Constraint",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Xtend"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src/org/softlang/metalib/xtext/fsml/validation/FsmlValidator.xtend",cljs.core.cst$kw$from,35,cljs.core.cst$kw$to,54], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Piggyback","Resolution"], null),cljs.core.cst$kw$headline,"Xtext model reference resolution by name",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Xtext"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Reference relationship","Name binding"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src/org/softlang/metalib/xtext/fsml/Fsml.xtext",cljs.core.cst$kw$from,20,cljs.core.cst$kw$to,21], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$headline,"",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Xtend"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template processing"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src/org/softlang/metalib/xtext/fsml/generator/FsmlGenerator.xtend",cljs.core.cst$kw$from,80,cljs.core.cst$kw$to,185], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graph rendering"], null),cljs.core.cst$kw$headline,"DGL generation",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Xtend"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template processing"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.xtext.fsml/src/org/softlang/metalib/xtext/fsml/generator/FsmlGenerator.xtend",cljs.core.cst$kw$from,188,cljs.core.cst$kw$to,199], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$6 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"pythonExternal",cljs.core.cst$kw$headline,"External DSL style with ANTLR and Python",cljs.core.cst$kw$baseuri,"https://github.com/softlang/yas/blob/master/languages/FSML/",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Concrete syntax"], null),cljs.core.cst$kw$headline,"FSML example",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["FSML"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"sample.fsml"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scanning"], null),cljs.core.cst$kw$headline,"Generated Lexer",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Parser generation","Generated code"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"Python/FsmlLexer.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Text-to-AST"], null),cljs.core.cst$kw$headline,"Generated Parser",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Parser generation","Generated code"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"Python/FsmlParser.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API","AST"], null),cljs.core.cst$kw$headline,"AST implementation based on dictionaries",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["dictionary"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Python/FsmlModel.py"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scanning","Text-to-AST"], null),cljs.core.cst$kw$headline,"ANTLR grammar for FSML including semantic actions",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Grammar","Semantic action"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ANTLR4"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Python/Fsml.g4"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Serialization"], null),cljs.core.cst$kw$headline,"Serialized Turnstile",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JSON"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Python/sample.json"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Serialization","Parsing"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Python"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"Python/FsmlToJSON.py"], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$7 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"MPS",cljs.core.cst$kw$baseuri,"https://github.com/softlang/metalib/blob/master/mps/",cljs.core.cst$kw$headline,"MPS implementation based on projectional editing",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$headline,"Projectional Editor on AST",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["capture"], null),cljs.core.cst$kw$languages,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["MPS"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"editor_state.png"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$headline,"Projectional Editor on AST",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["capture"], null),cljs.core.cst$kw$languages,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["MPS"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"structure_event.png"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$headline,"Check determinism",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["capture"], null),cljs.core.cst$kw$languages,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["MPS"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"typesystem_check_input.png"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$headline,"Compilation",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["capture"], null),cljs.core.cst$kw$languages,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["MPS"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"compilation_state.png"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Projectional Syntax"], null),cljs.core.cst$kw$headline,"Sample Turnstile",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["capture","data"], null),cljs.core.cst$kw$languages,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["MPS"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"sample.png"], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$8 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"HaskellQuasiQuotation",cljs.core.cst$kw$baseuri,"https://github.com/softlang/metalib/blob/master/haskell/fsml/",cljs.core.cst$kw$headline,"Use of quasi-quotation and Template Haskell",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$headline,"AST implementation",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Algebraic data type","Record type"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"src/Language/FSML/Ast.hs",cljs.core.cst$kw$from,7,cljs.core.cst$kw$to,15], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scanning"], null),cljs.core.cst$kw$headline,"Lexer definition",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Parsec"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lexer","Parser combinator"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"src/Language/FSML/Lexer.hs",cljs.core.cst$kw$from,13,cljs.core.cst$kw$to,43], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Scanning","Text-to-AST"], null),cljs.core.cst$kw$headline,"Parser combinator",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Parsec"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Parser combinator"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"src/Language/FSML/Parser.hs",cljs.core.cst$kw$from,28,cljs.core.cst$kw$to,50], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$headline,"Embedded turnstile object in Haskell declaration context",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template Haskell"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Quasi-quotation"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"app/Main.hs",cljs.core.cst$kw$from,7,cljs.core.cst$kw$to,22], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$headline,"Constraint checking",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"src/Language/FSML/Checker.hs",cljs.core.cst$kw$from,8,cljs.core.cst$kw$to,46], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Piggyback"], null),cljs.core.cst$kw$headline,"By generating alternatives for the state data type distinct state ids are guaranteed",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"src/Language/FSML/QuasiQuoter.hs",cljs.core.cst$kw$from,42,cljs.core.cst$kw$to,50], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Dynamic semantics","Run-time system"], null),cljs.core.cst$kw$headline,"Transitioning between states by folding over the generated event functions",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"app/Main.hs",cljs.core.cst$kw$from,24,cljs.core.cst$kw$to,28], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Staging"], null),cljs.core.cst$kw$headline,"Transitions are translated to Haskell AST",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Haskell"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template Haskell"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Quasi-quotation"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"src/Language/FSML/QuasiQuoter.hs",cljs.core.cst$kw$from,52,cljs.core.cst$kw$to,75], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$9 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"EMFXMI",cljs.core.cst$kw$headline,"EMF with XMI persistence",cljs.core.cst$kw$baseuri,"https://github.com/softlang/metalib/blob/master/emf/fsml/",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST","ASG","Resolution"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Metamodel","Structured editor","Reference","Package"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ecore"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation","capture"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"metamodel.PNG"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/model/Fsml.ecore"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API","ASG"], null),cljs.core.cst$kw$headline,"EMF model interface for the FSM object",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["OO interface","Generated code"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/FSM.java",cljs.core.cst$kw$from,25,cljs.core.cst$kw$to,52], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/FSMState.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/FSMTransition.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ASG"], null),cljs.core.cst$kw$headline,"EMF model class for the FSM object",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["OO class","Generated code"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/impl/FSMImpl.java",cljs.core.cst$kw$from,41,cljs.core.cst$kw$to,51], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/impl/FSMStateImpl.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/impl/FSMTransitionImpl.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST","ASG"], null),cljs.core.cst$kw$headline,"EMF Packages",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Package","Factory"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/FsmlFactory.java",cljs.core.cst$kw$from,49,cljs.core.cst$kw$to,58], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/FsmlPackage.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Model projection"], null),cljs.core.cst$kw$headline,"EMF Item provider",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Adapter","Command"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml.edit/src/org/softlang/metalib/emf/fsml/fsml/provider/FSMItemProvider.java",cljs.core.cst$kw$from,76,cljs.core.cst$kw$to,83], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml.edit/src/org/softlang/metalib/emf/fsml/fsml/provider/FSMStateItemProvider.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml.edit/src/org/softlang/metalib/emf/fsml/fsml/provider/FSMTransitionItemProvider.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graph editing","Model projection"], null),cljs.core.cst$kw$headline,"Viewing and editing the turnstile object in the generated eclipse editor",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data","capture"], null),cljs.core.cst$kw$languages,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JFace","SWT","Eclipse"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["IDE","Structured editor","Generated code"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"emfturnstile.PNG"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Graph editing","Model projection"], null),cljs.core.cst$kw$headline,"The generated eclipse editor for EMF models",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JFace","SWT","Eclipse"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["IDE","Structured Editor","Generated code"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"none",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml.editor/src/org/softlang/metalib/emf/fsml/fsml/presentation/FsmlEditor.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Serialization","Resolution","AST"], null),cljs.core.cst$kw$headline,"The turnstile object in EMF's textual exchange format",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["XMI"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["SAX"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Persistence","URI"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml.turnstile/Turnstile.fsml"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$headline,"EMF delegates model validation to methods with a certain signature",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/src/org/softlang/metalib/emf/fsml/fsml/impl/FSMStateImpl.java",cljs.core.cst$kw$from,188,cljs.core.cst$kw$to,217], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Piggyback"], null),cljs.core.cst$kw$headline,"Unique state names are validated by setting the EMF's unique id feature",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["XMI"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Metamodel"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"org.softlang.metalib.emf.fsml/model/Fsml.ecore",cljs.core.cst$kw$from,37,cljs.core.cst$kw$to,38], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$10 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"javaInfluentInternal",cljs.core.cst$kw$baseuri,"https://github.com/softlang/yas/blob/master/languages/FSML/Java/",cljs.core.cst$kw$headline,"Internal DSL style with Java and an influent API",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API","AST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Batch"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/ImperativeSample.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["API"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Functional constructor"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/FunctionalSample.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["OO Class","Functional constructor"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/Fsm.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/State.java"], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/Transition.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Interpretation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/FsmlInterpreter.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Interpretation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["JUnit"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/tests/InfluentTest.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$headline," Translate^O  Feature",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Generated code"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/tests/Turnstile.c"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["StringTemplate"], null),cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Template processing"], null),cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["StringTemplate"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"templates/Fsm.stg"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"https://github.com/softlang/yas/blob/master/languages/FSML/Java/org/softlang/fsml/FsmlCGenerator.java"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["test"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Java"], null),cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$technologies,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["StringTemplate","JUnit"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"org/softlang/fsml/tests/CGeneratorTest.java"], null)], null)], null)], null)], null);
return cljs.core._conj((function (){var x__10237__auto____$11 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,"Spoofax",cljs.core.cst$kw$baseuri,"https://github.com/softlang/metalib/blob/master/spoofax/fsml/",cljs.core.cst$kw$headline,"Spoofax AST",cljs.core.cst$kw$sections,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["AST"], null),cljs.core.cst$kw$headline,"FSML Grammar in Spoofax",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["SDF3"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Grammar"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"syntax/fsml.sdf3"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Textual syntax"], null),cljs.core.cst$kw$headline,"Turnstile sample in CS",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["FSML"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"test/Turnstile.fsm"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$headline,"Name binding",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["NABL"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Name binding"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"trans/names.nab"], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Analysis"], null),cljs.core.cst$kw$headline,"Check Initial",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Stratego"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$type,"some",cljs.core.cst$kw$link,"trans/check.str",cljs.core.cst$kw$from,61,cljs.core.cst$kw$to,62], null)], null)], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$features,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compilation"], null),cljs.core.cst$kw$headline,"Compilation to Java",cljs.core.cst$kw$perspectives,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["implementation"], null),cljs.core.cst$kw$languages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Stratego"], null),cljs.core.cst$kw$technologies,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$concepts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Name binding"], null),cljs.core.cst$kw$artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$type,"all",cljs.core.cst$kw$link,"trans/generate.str"], null)], null)], null)], null)], null);
return cljs.core._conj(cljs.core.List.EMPTY,x__10237__auto____$11);
})(),x__10237__auto____$10);
})(),x__10237__auto____$9);
})(),x__10237__auto____$8);
})(),x__10237__auto____$7);
})(),x__10237__auto____$6);
})(),x__10237__auto____$5);
})(),x__10237__auto____$4);
})(),x__10237__auto____$3);
})(),x__10237__auto____$2);
})(),x__10237__auto____$1);
})(),x__10237__auto__);
})()], 0));
var perspectives = cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.cst$kw$perspectives,cljs.core.array_seq([sections], 0)));
var features = cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.cst$kw$features,cljs.core.array_seq([sections], 0)));
var languages = cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.cst$kw$languages,cljs.core.array_seq([sections], 0)));
var technologies = cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.cst$kw$technologies,cljs.core.array_seq([sections], 0)));
var concepts = cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.cst$kw$concepts,cljs.core.array_seq([sections], 0)));
return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$h1,"Contributions"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div$toc,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (contributions,sections,perspectives,features,languages,technologies,concepts){
return (function (p1__22185_SHARP_){
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$a,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$href,[cljs.core.str.cljs$core$IFn$_invoke$arity$1("/metalib/contributions/"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(p1__22185_SHARP_)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(".html")].join('')], null),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(p1__22185_SHARP_)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(" \u2015 "),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$headline.cljs$core$IFn$_invoke$arity$1(p1__22185_SHARP_))].join('')], null)], null),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$key,p1__22185_SHARP_], null));
});})(contributions,sections,perspectives,features,languages,technologies,concepts))
,contributions)], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [metadocs.components.summary.component,perspectives,features,languages,technologies,concepts], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [metadocs.components.tagcloud.component,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.cst$kw$perspectives,cljs.core.array_seq([sections], 0))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [metadocs.components.tagcloud.component,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.cst$kw$features,cljs.core.array_seq([sections], 0))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [metadocs.components.tagcloud.component,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.cst$kw$languages,cljs.core.array_seq([sections], 0))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [metadocs.components.tagcloud.component,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.cst$kw$technologies,cljs.core.array_seq([sections], 0))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [metadocs.components.tagcloud.component,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.cst$kw$concepts,cljs.core.array_seq([sections], 0))], null)], null);
});
